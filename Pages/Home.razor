@page "/"

<PageTitle>Chat Frontend</PageTitle>

<div class="chat-container">
    <aside class="users-sidebar">
        <h2 class="sidebar-title">Active Users</h2>
        <ul class="users-list">
            @foreach (var user in activeUsers)
            {
                <li class="user-item">
                    <div class="user-avatar">@user.Name.Substring(0, 1)</div>
                    <span class="user-name">@user.Name</span>
                    <span class="user-status @(user.IsOnline ? "online" : "offline")"></span>
                </li>
            }
        </ul>
    </aside>

    <main class="chat-main">
        <header class="chat-header">
            <h1>Chat Room</h1>
            <span class="user-count">@activeUsers.Count(u => u.IsOnline) users online</span>
        </header>

        <div class="messages-container">
            @foreach (var message in messages)
            {
                <div class="message @(message.IsOwnMessage ? "own-message" : "")">
                    <div class="message-header">
                        <span class="message-author">@message.Author</span>
                        <span class="message-time">@message.Timestamp.ToString("HH:mm")</span>
                    </div>
                    <div class="message-content">@message.Content</div>
                </div>
            }
        </div>

        <div class="message-input-container">
            <input type="text" @bind="newMessage" @onkeypress="@((e) => { if (e.Key == "Enter") SendMessage(); })" 
                   class="message-input" placeholder="Type a message..." />
            <button @onclick="SendMessage" class="send-button">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"/>
                </svg>
            </button>
        </div>
    </main>
</div>

@code {
    private string newMessage = "";
    
    private List<User> activeUsers = new List<User>
    {
        new User { Name = "Alice Johnson", IsOnline = true },
        new User { Name = "Bob Smith", IsOnline = true },
        new User { Name = "Charlie Brown", IsOnline = false },
        new User { Name = "Diana Prince", IsOnline = true },
        new User { Name = "Ethan Hunt", IsOnline = true }
    };

    private List<Message> messages = new List<Message>
    {
        new Message { Author = "Alice Johnson", Content = "Hey everyone! How's it going?", Timestamp = DateTime.Now.AddMinutes(-5), IsOwnMessage = false },
        new Message { Author = "You", Content = "Hi Alice! Doing great, thanks for asking!", Timestamp = DateTime.Now.AddMinutes(-4), IsOwnMessage = true },
        new Message { Author = "Bob Smith", Content = "Just finished the project presentation. Went really well!", Timestamp = DateTime.Now.AddMinutes(-3), IsOwnMessage = false },
        new Message { Author = "Diana Prince", Content = "That's awesome Bob! Congrats 🎉", Timestamp = DateTime.Now.AddMinutes(-2), IsOwnMessage = false },
        new Message { Author = "You", Content = "Great job Bob! I knew you'd nail it.", Timestamp = DateTime.Now.AddMinutes(-1), IsOwnMessage = true }
    };

    private void SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(newMessage))
        {
            messages.Add(new Message
            {
                Author = "You",
                Content = newMessage,
                Timestamp = DateTime.Now,
                IsOwnMessage = true
            });
            
            newMessage = "";
            StateHasChanged();
        }
    }

    private class User
    {
        public string Name { get; set; } = "";
        public bool IsOnline { get; set; }
    }

    private class Message
    {
        public string Author { get; set; } = "";
        public string Content { get; set; } = "";
        public DateTime Timestamp { get; set; }
        public bool IsOwnMessage { get; set; }
    }
}
